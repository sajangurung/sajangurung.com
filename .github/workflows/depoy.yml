name: deploy to s3

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ $default-branch ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2
    - run: |
        npm ci
        npm run build --if-present
        npm test
        npm run export
    # - name: Deploy Infrastructure
    #   env:
    #     ACMARN: ${{ secrets.ACMARN }}
    #     CNAMES: 'sajangurung.com'
    #     HOSTED_ZONE: 'sajangurung.com.'
    #   run: |
    #     sam deploy \
    #     --template-file template.yaml \
    #     --stack-name blog \
    #     --capabilities CAPABILITY_IAM \
    #     --parameter-overrides ACMArn=$ACMARN CNAMEs=$CNAMES HostedZoneName=$HOSTED_ZONE \
    #     --no-fail-on-empty-changeset
    - name: Deploy
      id: blog
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      env:
        CNAMES: 'sajangurung.com'
        HOSTED_ZONE: 'sajangurung.com.'
      with:
        name: blog
        template: template.yaml
        no-fail-on-empty-changeset: "1"
        parameter-overrides: >-
          ACMArn=${{ secrets.ACMARN }},
          CNAMEs=${{ env.CNAMES }},
          HostedZoneName=${{ env.HOSTED_ZONE }}
    - name: Copy files to s3 bucket
      env:
        OUTPUTS: ${{ toJson(steps.blog.outputs) }}
      run: |
        aws s3 sync out/ s3://"${{ env.OUTPUTS.WebBucket }}" --delete
        aws cloudfront create-invalidation --distribution-id "${{ env.OUTPUTS.CloudfrontDistribution }}" --paths / /index.html