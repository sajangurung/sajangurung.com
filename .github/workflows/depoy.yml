name: deploy to s3

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ $default-branch ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Deploy Infrastructure
      env:
        ACMARN: ${{ secrets.ACMARN }}
        CNAMES: ${{ secrets.CNAMES }}
        HOSTED_ZONE: ${{ secrets.CNAMES }}
      run: |
        sam deploy \
        --template-file template.yaml \
        --stack-name blog \
        --capabilities CAPABILITY_IAM \
        --parameter-overrides ACMArn=${ACMARN} CNAMEs=${CNAMES} HostedZoneName=${HOSTED_ZONE} \
        --no-fail-on-empty-changeset
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2
    - run: |
        npm ci
        npm run build --if-present
        npm test
        npm run export
    - name: Copy files to s3 bucket
      env:
        CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
      run: |
        aws s3 sync out/ s3://sajangurung.com --delete
        aws cloudfront create-invalidation --distribution-id "$CLOUDFRONT_DISTRIBUTION_ID" --paths / /index.html